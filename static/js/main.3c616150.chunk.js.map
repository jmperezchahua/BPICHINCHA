{"version":3,"sources":["containers/Header/index.js","redux/data.js","components/Search/index.js","components/Card/index.js","containers/Body/index.js","services/index.js","redux/serie.js","containers/index.js","redux/store.js","index.js"],"names":["Header","className","data","createAction","createReducer","state","action","payload","Search","useState","input","stateInput","dispatch","useDispatch","dataApi","useSelector","serie","onSubmit","e","preventDefault","length","filterResult","filter","ele","name","toLowerCase","indexOf","type","placeholder","onChange","target","value","Card","src","image","alt","gender","origin","species","status","defaultClass","setStatusClass","Body","dataFront","useEffect","map","Serie","filterInput","axios","get","then","res","results","catch","err","console","log","getSerie","createAsyncThunk","api","fulfilled","App","store","configureStore","middleware","getDefaultMiddleware","concat","logger","reducer","serieReducer","dataReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c616150.chunk.js","sourcesContent":["import React from \"react\";\nconst Header = () => {\n  return (\n    <div className=\"container-fluid bg-warning\">\n      <h1>The Ricky and Morty</h1>\n    </div>\n  );\n};\nexport default Header;\n","import { createReducer, createAction } from \"@reduxjs/toolkit\";\nexport const data = createAction(\"GET-DATA-FRONT\");\n\nexport default createReducer([], {\n  [data]: (state, action) => action.payload,\n});\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { data } from \"../../redux/data\";\n\nconst Search = () => {\n  const [input, stateInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const dataApi = useSelector((state) => state.serie);\n\n  const filter = (data, input) =>\n    data.filter(\n      (ele) => ele.name.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    );\n\n  const onChange = (e) => {\n    stateInput(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (input && input.length) {\n      if (dataApi) {\n        const filterResult = filter(dataApi, input);\n        if (filterResult.length) dispatch(data(filterResult));\n      }\n    } else {\n      if (dataApi) dispatch(data(dataApi));\n    }\n  };\n\n  return (\n    <form className=\"d-flex text-center m-5\" onSubmit={onSubmit}>\n      <input\n        className=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={onChange}\n      />\n      <button className=\"btn btn-outline-success\" type=\"submit\">\n        <i className=\"bi bi-search\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Card = ({ data }) => {\n  const setStatusClass = (status) => {\n    let defaultClass = \"\";\n    switch (status) {\n      case \"Alive\":\n        defaultClass = \"success\";\n        break;\n      case \"Dead\":\n        defaultClass = \"danger\";\n        break;\n      default:\n        break;\n    }\n    return defaultClass;\n  };\n  return (\n    <div className=\"col p-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <img src={data.image} alt=\"\" />\n        </div>\n        <div className=\"col\">\n          <h3>{data.name}</h3>\n          <div>\n            <p>{data.gender}</p>\n            <p>{data.origin.name}</p>\n            <p>{data.species}</p>\n            <p className={`bg-${setStatusClass(data.status)}`}>{data.status}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Search from \"../../components/Search\";\nimport Card from \"../../components/Card\";\nimport { data } from \"../../redux/data\";\n\nconst Body = () => {\n  const dispatch = useDispatch();\n\n  const dataApi = useSelector((state) => state.serie);\n  const dataFront = useSelector((state) => state.data);\n\n  useEffect(() => {\n    if (dataApi) {\n      dispatch(data(dataApi));\n    }\n  }, [dispatch, dataApi]);\n\n  return (\n    <div>\n      <Search />\n      <div>\n        {/* <button className=\"btn btn-primary\">Atras</button>\n        <button className=\"btn btn-primary\">Siguiente</button> */}\n      </div>\n      <div className=\"d-flex align-content-between justify-content-center flex-wrap\">\n        <div className=\"row\">\n          {dataFront.length && dataFront.map((ele) => <Card data={ele} />)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","import axios from \"axios\";\n\nconst Serie = (filterInput) => {\n  const api = `https://rickandmortyapi.com/api/character`;\n  return (\n    axios\n      .get(api)\n      .then((res) => res.data)\n      // .then((data) =>\n      //   filterInput.length\n      //     ? data.results.filter(\n      //         (ele) =>\n      //           ele.name.toLowerCase().indexOf(filterInput.toLowerCase()) >= 0\n      //       )\n      //     : data.results\n      // )\n      .then((data) => data.results)\n      .catch((err) => console.log(\"Horror ...\", err))\n  );\n};\n\nexport default Serie;\n","import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../services\";\n\nexport const getSerie = createAsyncThunk(\"GET-SERIE\", (value) => api(value));\n\nexport default createReducer(\n  {},\n  {\n    [getSerie.fulfilled]: (state, action) => action.payload,\n  }\n);\n","import \"./index.css\";\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { getSerie } from \"../redux/serie\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getSerie());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport serieReducer from \"./serie\";\nimport dataReducer from \"./data\";\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  reducer: {\n    serie: serieReducer,\n    data: dataReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}